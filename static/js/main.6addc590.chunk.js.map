{"version":3,"sources":["utils/Constants.js","api/index.js","components/Map/index.js","hooks/useSearch.js","components/Search/index.js","hooks/useInputFocus.js","components/WorldStats/index.js","Store.js","GlobalStyles.js","views/Main/index.js","views/Details/styled.js","components/Chart/index.js","hooks/useWindowSize.js","views/Details/index.js","App.js","index.js"],"names":["missingCountries","missingIso3","countriesDataSanitizer","countries","newData","forEach","country","foundIndex","findIndex","c","newObject","countryInfo","iso3","push","FuseOptions","shouldSort","threshold","location","distance","maxPatternLength","minMatchCharLength","BASE_URL","getAll","a","sessionStorage","getItem","axios","get","data","setItem","JSON","stringify","parse","getAllCountries","sanitizedData","getHistoricalDataByCountry","WorldMap","setTooltipContent","covid19DataScale","countriesData","getColor","count","range","ranges","Array","fill","rangeCreator","Math","round","map","_","i","scaleLinear","domain","colorScale","scale","data-tip","className","projection","zoom","geography","geographies","geo","foundCountry","find","properties","ISO_A3","newGeoObject","countryData","key","rsmKey","cases","onMouseEnter","NAME","name","recovered","deaths","onMouseLeave","style","default","stroke","hover","outline","pressed","defaultProps","React","memo","useSearch","options","useState","searchTerm","setSearchTerm","fuse","Fuse","results","term","search","res","item","reset","SearchInput","styled","input","SearchIcon","div","Sidebar","section","CountriesListContainer","TextContainer","Text","Icon","Search","initialData","showSideBar","setShowSideBar","setData","ref","active","inputRef","useRef","useEffect","current","focus","useInputFocus","display","placeholder","value","onChange","e","target","onClick","to","Container","props","height","size","color","GlobalStats","stats","expanded","setExpanded","alignItems","flexShrink","margin","marginBottom","fontSize","prevState","dateParts","Date","toString","split","newDate","concat","formatDate","updated","StoreContext","createContext","initialState","reducer","state","action","type","payload","Error","StoreProvider","children","useReducer","dispatch","Provider","useStore","useContext","createGlobalStyle","Credits","Main","covid19Data","setCovid19Data","tooltipContent","length","href","Header","ScreenContainer","StatContainer","StatItem","sanitizeData","object","casesDates","Object","keys","deathsDates","recoveredDates","reduce","acc","date","entry","includes","width","isClient","window","getSize","innerWidth","undefined","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","showDot","setShowDot","top","bottom","strokeDasharray","label","position","offset","tick","dataKey","angle","dot","strokeWidth","Details","useParams","historicalData","setHistoricalData","searchCountry","toLowerCase","todayCases","todayDeaths","critical","timeline","marginLeft","App","exact","path","component","from","ReactDOM","render","StrictMode","GlobalStyles","document","getElementById"],"mappings":"sRAgBMA,EAAmB,CACvB,MACA,OACA,WACA,KACA,MACA,kBACA,UACA,YACA,MACA,WACA,SAGIC,EAAc,CAClB,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAGWC,EAAyB,SAAAC,GACpC,IAAMC,EAAU,GAShB,OARAD,EAAUE,SAAQ,SAAAC,GAChB,IAAMC,EAAaP,EAAiBQ,WAAU,SAAAC,GAAC,OAAIA,IAAMH,EAAQA,WACjE,IAAoB,IAAhBC,EAAmB,CACrB,IAAMG,EAAS,eAAQJ,GACvBI,EAAUC,YAAYC,KAAOX,EAAYM,GACzCH,EAAQS,KAAKH,QACRN,EAAQS,KAAKP,MAEfF,GAGIU,EAAc,CACzBC,YAAY,EACZC,UAAW,GACXC,SAAU,EACVC,SAAU,GACVC,iBAAkB,GAClBC,mBAAoB,GC5DhBC,EAAW,4B,SAEFC,I,2EAAf,kCAAAC,EAAA,kEAESC,eAAeC,QAAQ,OAFhC,gCAG6BC,IAAMC,IAAN,UAAaN,EAAb,SAH7B,uBAGcO,EAHd,EAGcA,KACRJ,eAAeK,QAAQ,MAAOC,KAAKC,UAAUH,IAJnD,kBAKaA,GALb,gCAOWE,KAAKE,MAAMR,eAAeC,QAAQ,SAP7C,mDAS2BC,IAAMC,IAAN,UAAaN,EAAb,SAT3B,wBASYO,EATZ,EASYA,KATZ,kBAUWA,GAVX,2D,+BAceK,I,2EAAf,sCAAAV,EAAA,kEAESC,eAAeC,QAAQ,gBAFhC,gCAG6BC,IAAMC,IAAN,UAAaN,EAAb,eAH7B,uBAGcO,EAHd,EAGcA,KACFM,EAAgBhC,EAAuB0B,GAC7CJ,eAAeK,QAAQ,eAAgBC,KAAKC,UAAUG,IAL5D,kBAMaA,GANb,gCAQWJ,KAAKE,MAAMR,eAAeC,QAAQ,kBAR7C,mDAU2BC,IAAMC,IAAN,UAAaN,EAAb,eAV3B,wBAUYO,EAVZ,EAUYA,KACFM,EAAgBhC,EAAuB0B,GAXjD,kBAYWM,GAZX,2D,+BAgBeC,E,8EAAf,WAA0C7B,GAA1C,iBAAAiB,EAAA,+EAE2BG,IAAMC,IAAN,UAAaN,EAAb,uBAAoCf,IAF/D,uBAEYsB,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,yDAKWO,EAA2B7B,IALtC,0D,kCCzBA,SAAS8B,EAAT,GAA2E,IAAvDC,EAAsD,EAAtDA,kBAAmBC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,cACjDC,EAAW,SAAAC,GAGf,OFTsB,SAAAC,GACxB,IAAIC,EAAS,IAAIC,MAAM,GAAGC,KAAK,GACzBC,EAAeC,KAAKC,MAAMN,EAAQ,GAIxC,OAFAC,EAASA,EAAOM,KAAI,SAACC,EAAGC,GAAJ,OAAUL,GAAgBK,EAAI,MAE3CC,cACJC,OADI,CACI,GADJ,mBACUV,KACdD,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,YEDtCY,CAAWhB,EACXiB,CAAMd,IAItB,OACE,kBAAC,gBAAD,CAAee,WAAS,GAAGC,UAAU,WAAWC,WAAW,eACzD,kBAAC,gBAAD,CAAeC,KAAM,GACnB,kBAAC,cAAD,CAAaC,UFjBnB,2GEkBS,qBAAGC,YACUZ,KAAI,SAAAa,GACd,IAAMC,EAAexB,EAAcyB,MACjC,qBAAGrD,YAA8BC,OAASkD,EAAIG,WAAWC,UAGrDC,EAAY,eAAQL,EAAR,CAAaM,YAAaL,IAE5C,OACE,kBAAC,YAAD,CACEM,IAAKP,EAAIQ,OACTV,UAAWO,EACXtB,KAAMkB,EAAevB,EAASuB,EAAaQ,OAAS,UACpDC,aAAc,WAAO,IAEjBJ,EAEED,EAFFC,YACcK,EACZN,EADFF,WAAcQ,KAGdpC,EADE+B,EACgB,CAChBM,KAAMD,EACNF,MAAOH,EAAYG,MACnBI,UAAWP,EAAYO,UACvBC,OAAQR,EAAYQ,QAGJ,CAAEF,KAAMD,KAG9BI,aAAc,WACZxC,EAAkB,KAEpByC,MAAO,CACLC,QAAS,CAAEC,OAAQ,OACnBC,MAAO,CACLpC,KAAM,OACNqC,QAAS,IAEXC,QAAS,CACPtC,KAAM,OACNqC,QAAS,mBAmB/B9C,EAASgD,aAAe,CACtB/C,kBAAmB,aACnBC,iBAAkB,EAClBC,cAAe,IAGF8C,UAAMC,KAAKlD,G,qDCnEXmD,MAXf,YAA4C,IAAD,IAAtB3D,YAAsB,MAAf,GAAe,EAAX4D,EAAW,EAAXA,QAAW,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAEnCC,EAAO,IAAIC,IAAKjE,EAAM4D,GAM5B,MAAO,CAAEM,QAJQ,KAAfJ,EATJ,YAAuC,IAArBE,EAAoB,EAApBA,KAAMhE,EAAc,EAAdA,KAAMmE,EAAQ,EAARA,KACtBD,EAAUF,EAAKI,OAAOD,GAC5B,OAAOA,EAAOD,EAAUlE,EAQlBoE,CAAO,CAAEJ,OAAMhE,OAAMmE,KAAML,IAAczC,KAAI,SAAAgD,GAAG,OAAIA,EAAIC,QACxDtE,EAEYoE,OAAQL,EAAeD,aAAYS,MADvC,kBAAMR,EAAc,O,gqDCJpC,IAAMS,EAAcC,IAAOC,MAAV,KAgBXC,EAAaF,IAAOG,IAAV,KAmBVC,EAAUJ,IAAOK,QAAV,KA+BPC,EAAyBN,IAAOG,IAAV,KAQtBI,EAAgBP,IAAOG,IAAV,KAObK,EAAOR,IAAOG,IAAV,KAOJM,EAAOT,IAAOG,IAAV,KAaV,SAASO,GAAT,GAAkC,IAAhBC,EAAe,EAAfA,YAAe,EACOvB,oBAAS,GADhB,mBACxBwB,EADwB,KACXC,EADW,OAEPzB,mBAASuB,GAFF,mBAExBpF,EAFwB,KAElBuF,EAFkB,OAIS5B,EAAU,CAChD3D,OACA4D,QAAS1E,IAFHgF,EAJuB,EAIvBA,QAASE,EAJc,EAIdA,OAAQN,EAJM,EAINA,WAIjB0B,ECtHK,SAAuBC,GACpC,IAAMC,EAAWC,mBAQjB,OANAC,qBAAU,WACJF,EAASG,SAAWJ,GACtBC,EAASG,QAAQC,UAElB,CAACL,IAEG,CAAED,IAAKE,GD6GEK,CAAcV,GAAtBG,IAMR,OAJAI,qBAAU,WACRL,GAAQ,kBAAMH,OACb,CAACA,IAGF,oCACIC,EAKA,kBAACR,EAAD,KACE,yBAAK3B,MAAO,CAAE8C,QAAS,SACrB,kBAACxB,EAAD,CACEgB,IAAKA,EACLS,YAAY,iCACZC,MAAOpC,EACPqC,SAAU,SAAAC,GACRhC,EAAOgC,EAAEC,OAAOH,UAGpB,kBAAC,IAAD,CAAWI,QAAS,kBAAMhB,GAAe,kBAAM,SAEjD,kBAACP,EAAD,KACGb,EAAQ7C,KAAI,SAAC3C,EAAS6C,GACrB,IAAMkB,EAAMlB,EACZ,OACE,kBAAC,IAAD,CAAMkB,IAAKA,EAAK8D,GAAE,WAAM7H,IACtB,kBAACsG,EAAD,KACE,kBAACC,EAAD,KAAOvG,GACP,kBAACwG,EAAD,KACE,kBAAC,IAAD,cAxBd,kBAACP,EAAD,CAAY2B,QAAS,kBAAMhB,GAAe,kBAAM,OAC9C,kBAAC,IAAD,QAwCVH,GAAO3B,aAAe,CACpB4B,YAAa,IAGA3B,WAAMC,KAAKyB,I,8kCEzK1B,IAAMqB,GAAY/B,IAAOG,IAAV,MAqBD,SAAA6B,GAAK,MAAsB,SAAjBA,EAAMC,OAAoB,QAAU,UAC1C,SAAAD,GAAK,MAAsB,SAAjBA,EAAMC,OAAoB,QAAU,UAG9C,SAAAD,GAAK,MACA,SAAjBA,EAAMC,OAAoB,mBAAqB,uBAK/CzB,GAAOR,IAAOG,IAAV,MAKK,SAAA6B,GAAK,OAAIA,EAAME,MAAQ,UAC3B,SAAAF,GAAK,OAAIA,EAAMG,OAASH,EAAMG,SAOnC1B,GAAOT,IAAOG,IAAV,MA+BV,SAASiC,GAAT,GAAiC,IAAVC,EAAS,EAATA,MAAS,EACEjD,oBAAS,GADX,mBACvBkD,EADuB,KACbC,EADa,KAG9B,OACE,kBAACR,GAAD,CAAWE,OAAQK,EAAW,OAAS,SACrC,yBAAK7D,MAAO,CAAE8C,QAAS,OAAQiB,WAAY,SAAUC,WAAY,IAC/D,yBAAKhE,MAAO,CAAEiE,OAAQ,EAAGC,aAAc,MAAOC,SAAU,SAAxD,gBAGA,kBAAC,GAAD,KACGN,EACC,kBAAC,IAAD,CACET,QAAS,kBAAMU,GAAY,SAAAM,GAAS,OAAKA,QAG3C,kBAAC,IAAD,CAAahB,QAAS,kBAAMU,GAAY,SAAAM,GAAS,OAAKA,UAI5D,kBAAC,GAAD,CAAMV,MAAM,WAAZ,UAA8BE,EAAMnE,OACpC,kBAAC,GAAD,CAAMiE,MAAM,WAAZ,cAAkCE,EAAM/D,WACxC,kBAAC,GAAD,CAAM6D,MAAM,WAAZ,WAA+BE,EAAM9D,QACrC,kBAAC,GAAD,CAAM2D,KAAK,QAAX,oBApCN,SAAoB3G,GAOlB,IANA,IAAMuH,EAAYC,KAAKxH,GACpByH,WACAC,MAAM,KAELC,EAAU,GAELpG,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BoG,EAAUA,EAAQC,OAAR,UAAkBL,EAAUhG,GAA5B,MAGZ,OAAOoG,EAyBiCE,CAAWf,EAAMgB,WAc3DjB,GAAYrD,aAAe,CACzBsD,MAAO,IAGMrD,WAAMC,KAAKmD,ICrHpBkB,GAAeC,0BAEfC,GAAe,CACnB1J,UAAW2B,KAAKE,MAAMR,eAAeC,QAAQ,kBAAoB,IAG7DqI,GAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAO,eAAKF,EAAZ,CAAmB5J,UAAW6J,EAAOE,UACvC,IAAK,QACH,OAAO,eAAKH,GACd,QACE,MAAM,IAAII,MAAJ,iCAAoCH,EAAOC,SAI1CG,GAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBC,qBAAWR,GAASD,IADD,mBACtCE,EADsC,KAC/BQ,EAD+B,KAG7C,OACE,kBAACZ,GAAaa,SAAd,CAAuB1C,MAAO,CAAEiC,QAAOQ,aACpCF,IASPD,GAAchF,aAAe,CAC3BiF,SAAU,IAGL,IAAMI,GAAW,kBAAMC,qBAAWf,K,o8BCpC1BgB,mBAAf,MAqCaC,GAAUvE,IAAOG,IAAV,MCkBLqE,OAhDf,WAAiB,IAAD,EACcJ,KAApBV,EADM,EACNA,MAAOQ,EADD,EACCA,SADD,EAEwB9E,mBAAS,IAFjC,mBAEPqF,EAFO,KAEMC,EAFN,OAG8BtF,mBAAS,IAHvC,mBAGPuF,EAHO,KAGS3I,EAHT,KAmBd,OAdAmF,qBAAU,YACR,uCAAC,4BAAAjG,EAAA,sEACoBD,IADpB,OACOM,EADP,OAECmJ,GAAe,kBAAMnJ,KAFtB,2CAAD,yDAIC,IAEH4F,qBAAU,YACR,uCAAC,4BAAAjG,EAAA,sEACoBU,IADpB,OACOL,EADP,OAEC2I,EAAS,CAAEN,KAAM,kBAAmBC,QAAStI,IAF9C,2CAAD,yDAIC,CAAC2I,IAGF,oCACE,kBAAC,GAAD,CAAQvD,YAAa+C,EAAM5J,UAAU8C,KAAI,SAAA3C,GAAO,OAAIA,EAAQA,aAC5D,kBAAC,GAAD,CAAaoI,MAAOoC,IACpB,kBAAC,EAAD,CACEzI,kBAAmBA,EACnBC,iBAAkBwI,EAAYvG,MAC9BhC,cAAewH,EAAM5J,YAEI,IAA1B6K,EAAeC,QACd,kBAAC,IAAD,KACE,4BAAKD,EAAetG,MAAQsG,EAAetG,MAC1CsG,EAAezG,OAAS,sCAAYyG,EAAezG,OACnDyG,EAAerG,WACd,0CAAgBqG,EAAerG,WAEhCqG,EAAepG,QAAU,uCAAaoG,EAAepG,SAG1D,kBAACgG,GAAD,KACE,uBAAGM,KAAK,6CAAR,WADF,aAEE,0BAAMpG,MAAO,CAAE0D,MAAO,QAAtB,YAFF,QAIE,uBAAG0C,KAAK,qCAAR,uB,kyCCjDR,IAAMC,GAAS9E,IAAOG,IAAV,MAgBN4E,GAAkB/E,IAAOG,IAAV,MAYf6E,GAAgBhF,IAAOK,QAAV,MAiBb4E,GAAWjF,IAAOG,IAAV,MAUH,SAAA6B,GAAK,OAAIA,EAAMG,OAAS,a,SC5CnC,IAAM+C,GAAe,WAAkB,IAAjBC,EAAgB,uDAAP,GACrBjH,EAA6BiH,EAA7BjH,MAAOK,EAAsB4G,EAAtB5G,OAAQD,EAAc6G,EAAd7G,UAEjB8G,EAAaC,OAAOC,KAAKpH,GACzBqH,EAAcF,OAAOC,KAAKpH,GAC1BsH,EAAiBH,OAAOC,KAAKpH,GAEnC,OAAOkH,EAAWK,QAAO,SAACC,EAAKC,GAC7B,IAAMC,EAAQ,CAAED,OAAMzH,MAAOA,EAAMyH,IAKnC,OAJoC,IAAhCJ,EAAYM,SAASF,GAAcC,EAAMrH,OAAS,EACjDqH,EAAMrH,OAASA,EAAOoH,IACY,IAAnCH,EAAeK,SAASF,GAAcC,EAAMtH,UAAY,EACvDsH,EAAMtH,UAAYA,EAAUqH,GAC3B,GAAN,mBAAWD,GAAX,CAAgBE,MACf,KA6DU5G,WAAMC,MA1DrB,YAA0B,IAAT1D,EAAQ,EAARA,KACPuK,EC7BK,WACb,IAAMC,EAA6B,kBAAXC,OAExB,SAASC,IACP,MAAO,CACLH,MAAOC,EAAWC,OAAOE,gBAAaC,EAEtClE,OAAQ8D,EAAWC,OAAOI,iBAAcD,GAPN,MAWF/G,mBAAS6G,GAXP,mBAW/BI,EAX+B,KAWnBC,EAXmB,KA2BtC,OAdAnF,qBAAU,WACR,IAAK4E,EACH,OAAO,EAGT,SAASQ,IACPD,EAAcL,KAKhB,OAFAD,OAAOQ,iBAAiB,SAAUD,GAE3B,kBAAMP,OAAOS,oBAAoB,SAAUF,MACjD,IAEIF,EDEWK,GAAVZ,MADe,EAEO1G,oBAAS,GAFhB,mBAEhBuH,EAFgB,KAEPC,EAFO,KASvB,OALAzF,qBAAU,WACSyF,EAAbd,EAAQ,IAAgB,kBAAM,GAClB,kBAAM,MACrB,CAACA,IAGF,kBAAC,KAAD,CAAqBA,MAAM,OAAO7D,OAAQ,KACxC,kBAAC,KAAD,CAAW1G,KAAM2J,GAAa3J,GAAOmH,OAAQ,CAAEmE,IAAK,GAAIC,OAAQ,KAC9D,kBAAC,KAAD,CAAenI,OAAO,OAAOoI,gBAAgB,QAC7C,kBAAC,KAAD,CACEC,MAAO,CACLvF,MAAO,QACPmB,SAAU,OACVqE,SAAU,eACVC,OAAQ,GAEVC,KAAM,CAAEvE,SAAU,QAClBwE,QAAQ,OACRnF,OAAQ,KAEV,kBAAC,KAAD,CACE+E,MAAO,CACLvF,MAAO,QACPmB,SAAU,OACVyE,OAAQ,GACRJ,SAAU,cAEZE,KAAM,CAAEvE,SAAU,UAEpB,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,CACEgB,KAAK,WACLwD,QAAQ,QACRzI,OAAO,UACP2I,MAAKX,GAAU,CAAEY,YAAa,MAEhC,kBAAC,KAAD,CACE3D,KAAK,WACLwD,QAAQ,SACRzI,OAAO,UACP2I,MAAKX,GAAU,CAAEY,YAAa,MAEhC,kBAAC,KAAD,CACE3D,KAAK,WACLwD,QAAQ,YACRzI,OAAO,UACP2I,MAAKX,GAAU,CAAEY,YAAa,WElBzBC,OAxDf,WAAoB,IAEP1N,EACPsK,KADFV,MAAS5J,UAEHG,EAAYwN,cAAZxN,QAJS,EAK2BmF,mBAAS,IALpC,mBAKVsI,EALU,KAKMC,EALN,KAOXC,EAAgB9N,EAAU6D,MAAK,SAAAiI,GAAK,OAAIA,EAAM3L,UAAYA,KAShE,OAPAkH,qBAAU,YACR,uCAAC,4BAAAjG,EAAA,sEACoBY,EAA2B7B,EAAQ4N,eADvD,OACOtM,EADP,OAECoM,GAAkB,kBAAMpM,KAFzB,2CAAD,yDAIC,CAACtB,IAGF,oCACE,kBAAC6K,GAAD,2BAA4B8C,EAAc3N,SAC1C,kBAAC8K,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,qBAAwB2C,EAAc1J,OACtC,kBAAC+G,GAAD,qBAAwB2C,EAAcE,YACtC,kBAAC7C,GAAD,CAAU9C,MAAM,WAAhB,iBACiByF,EAAcrJ,QAE/B,kBAAC0G,GAAD,CAAU9C,MAAM,WAAhB,iBACiByF,EAAcG,aAE/B,kBAAC9C,GAAD,CAAU9C,MAAM,WAAhB,cACcyF,EAActJ,WAE5B,kBAAC2G,GAAD,gBAAmB2C,EAAc5G,QACjC,kBAACiE,GAAD,CAAU9C,MAAM,WAAhB,aACayF,EAAcI,WAG5BN,EAAeO,UACd5C,OAAOC,KAAKoC,EAAeO,SAAS/J,OAAO0G,OAAS,GAClD,oCACE,yBACEnG,MAAO,CACLmE,SAAU,OACVT,MAAO,UACP+F,WAAY,QAJhB,mBAQA,kBAAC,GAAD,CAAO3M,KAAMmM,EAAeO,eCtC3BE,OAZf,WACE,OACE,yBAAK/K,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgL,OAAK,EAACC,KAAK,IAAIC,UAAW9D,KACjC,kBAAC,IAAD,CAAO6D,KAAK,YAAYC,UAAWd,KACnC,kBAAC,IAAD,CAAUe,KAAK,KAAKzG,GAAG,SCL/B0G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAD,MACA,kBAAC,GAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.6addc590.chunk.js","sourcesContent":["import { scaleLinear } from 'd3-scale';\n\nexport const GEO_URL =\n  'https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json';\n\nexport const colorScale = range => {\n  let ranges = new Array(5).fill(0);\n  const rangeCreator = Math.round(range / 5);\n\n  ranges = ranges.map((_, i) => rangeCreator * (i + 1));\n\n  return scaleLinear()\n    .domain([0, ...ranges])\n    .range(['#f7d9d9', '#e16968', '#d63230', '#9c2523', '#4e1312']);\n};\n\nconst missingCountries = [\n  'USA',\n  'Iran',\n  'S. Korea',\n  'UK',\n  'UAE',\n  'North Macedonia',\n  'Moldova',\n  'Palestine',\n  'DRC',\n  'Tanzania',\n  'Syria'\n];\n\nconst missingIso3 = [\n  'USA',\n  'IRN',\n  'KOR',\n  'GBR',\n  'ARE',\n  'MKD',\n  'MDA',\n  'PSE',\n  'COD',\n  'TZA',\n  'SYR'\n];\n\nexport const countriesDataSanitizer = countries => {\n  const newData = [];\n  countries.forEach(country => {\n    const foundIndex = missingCountries.findIndex(c => c === country.country);\n    if (foundIndex !== -1) {\n      const newObject = { ...country };\n      newObject.countryInfo.iso3 = missingIso3[foundIndex];\n      newData.push(newObject);\n    } else newData.push(country);\n  });\n  return newData;\n};\n\nexport const FuseOptions = {\n  shouldSort: true,\n  threshold: 0.4,\n  location: 0,\n  distance: 50,\n  maxPatternLength: 12,\n  minMatchCharLength: 3\n};\n","import axios from 'axios';\nimport { countriesDataSanitizer } from '../utils/Constants';\n\nconst BASE_URL = 'https://corona.lmao.ninja';\n\nasync function getAll() {\n  try {\n    if (!sessionStorage.getItem('all')) {\n      const { data } = await axios.get(`${BASE_URL}/all`);\n      sessionStorage.setItem('all', JSON.stringify(data));\n      return data;\n    }\n    return JSON.parse(sessionStorage.getItem('all'));\n  } catch (e) {\n    const { data } = await axios.get(`${BASE_URL}/all`);\n    return data;\n  }\n}\n\nasync function getAllCountries() {\n  try {\n    if (!sessionStorage.getItem('allCountries')) {\n      const { data } = await axios.get(`${BASE_URL}/countries`);\n      const sanitizedData = countriesDataSanitizer(data);\n      sessionStorage.setItem('allCountries', JSON.stringify(sanitizedData));\n      return sanitizedData;\n    }\n    return JSON.parse(sessionStorage.getItem('allCountries'));\n  } catch (e) {\n    const { data } = await axios.get(`${BASE_URL}/countries`);\n    const sanitizedData = countriesDataSanitizer(data);\n    return sanitizedData;\n  }\n}\n\nasync function getHistoricalDataByCountry(country) {\n  try {\n    const { data } = await axios.get(`${BASE_URL}/historical/${country}`);\n    return data;\n  } catch (e) {\n    return getHistoricalDataByCountry(country);\n  }\n}\n\nexport { getAll, getAllCountries, getHistoricalDataByCountry };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  ZoomableGroup\n} from 'react-simple-maps';\nimport { colorScale, GEO_URL } from '../../utils/Constants';\n\nfunction WorldMap({ setTooltipContent, covid19DataScale, countriesData }) {\n  const getColor = count => {\n    const scale = colorScale(covid19DataScale);\n    const color = scale(count);\n    return color;\n  };\n\n  return (\n    <ComposableMap data-tip='' className='main-map' projection='geoMercator'>\n      <ZoomableGroup zoom={1}>\n        <Geographies geography={GEO_URL}>\n          {({ geographies }) =>\n            geographies.map(geo => {\n              const foundCountry = countriesData.find(\n                ({ countryInfo }) => countryInfo.iso3 === geo.properties.ISO_A3\n              );\n\n              const newGeoObject = { ...geo, countryData: foundCountry };\n\n              return (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={newGeoObject}\n                  fill={foundCountry ? getColor(foundCountry.cases) : '#F5F4F6'}\n                  onMouseEnter={() => {\n                    const {\n                      countryData,\n                      properties: { NAME }\n                    } = newGeoObject;\n                    if (countryData) {\n                      setTooltipContent({\n                        name: NAME,\n                        cases: countryData.cases,\n                        recovered: countryData.recovered,\n                        deaths: countryData.deaths\n                      });\n                    } else {\n                      setTooltipContent({ name: NAME });\n                    }\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent('');\n                  }}\n                  style={{\n                    default: { stroke: '#ff' },\n                    hover: {\n                      fill: '#F00',\n                      outline: ''\n                    },\n                    pressed: {\n                      fill: '#F00',\n                      outline: 'none'\n                    }\n                  }}\n                />\n              );\n            })\n          }\n        </Geographies>\n      </ZoomableGroup>\n    </ComposableMap>\n  );\n}\n\nWorldMap.propTypes = {\n  setTooltipContent: PropTypes.func,\n  covid19DataScale: PropTypes.number,\n  countriesData: PropTypes.arrayOf(PropTypes.any)\n};\n\nWorldMap.defaultProps = {\n  setTooltipContent: () => {},\n  covid19DataScale: 0,\n  countriesData: []\n};\n\nexport default React.memo(WorldMap);\n","import { useState } from 'react';\nimport Fuse from 'fuse.js';\n\nfunction search({ fuse, data, term }) {\n  const results = fuse.search(term);\n  return term ? results : data;\n}\n\nfunction useSearch({ data = [], options }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const fuse = new Fuse(data, options);\n  const results =\n    searchTerm !== ''\n      ? search({ fuse, data, term: searchTerm }).map(res => res.item)\n      : data;\n  const reset = () => setSearchTerm('');\n  return { results, search: setSearchTerm, searchTerm, reset };\n}\n\nexport default useSearch;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport { FiArrowRight } from 'react-icons/fi';\nimport { GoSearch } from 'react-icons/go';\nimport { IoMdClose } from 'react-icons/io';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport useInputFocus from '../../hooks/useInputFocus';\nimport useSearch from '../../hooks/useSearch';\nimport { FuseOptions } from '../../utils/Constants';\n\nconst SearchInput = styled.input`\n  height: 24px;\n  width: 100%;\n  margin-right: 8px;\n  border: none;\n  background-color: transparent;\n  color: #ffffff;\n  font-size: 14px;\n  font-weight: bolder;\n\n  :focus,\n  :hover {\n    border-bottom: 1px solid #ffffff;\n  }\n`;\n\nconst SearchIcon = styled.div`\n  position: absolute;\n  right: 0;\n\n  margin: 16px 24px 0 0;\n\n  height: 24px;\n  width: 24px;\n\n  color: #263238;\n\n  cursor: pointer;\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nconst Sidebar = styled.section`\n  position: absolute;\n  right: 0;\n  top: 0;\n\n  display: flex;\n  flex-direction: column;\n\n  height: calc(100vh - 32px);\n  width: 256px;\n  padding: 16px;\n\n  background: #263238;\n\n  overflow: hidden;\n\n  svg {\n    height: 24px;\n    width: 24px;\n    float: right;\n\n    color: #ffffff;\n\n    cursor: pointer;\n  }\n\n  @media only screen and (max-width: 768px) {\n    height: calc(100vh - 48px);\n  }\n`;\n\nconst CountriesListContainer = styled.div`\n  width: 100%;\n  height: calc(100% - 48px);\n  margin-left: 2.5px;\n\n  overflow-y: scroll;\n`;\n\nconst TextContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  cursor: pointer;\n`;\n\nconst Text = styled.div`\n  margin-top: 12px;\n\n  font-size: 12px;\n  color: white;\n`;\n\nconst Icon = styled.div`\n  margin-left: auto;\n  height: 12px;\n  width: 12px;\n\n  color: #ffffff;\n\n  svg {\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nfunction Search({ initialData }) {\n  const [showSideBar, setShowSideBar] = useState(false);\n  const [data, setData] = useState(initialData);\n\n  const { results, search, searchTerm } = useSearch({\n    data,\n    options: FuseOptions\n  });\n  const { ref } = useInputFocus(showSideBar);\n\n  useEffect(() => {\n    setData(() => initialData);\n  }, [initialData]);\n\n  return (\n    <>\n      {!showSideBar ? (\n        <SearchIcon onClick={() => setShowSideBar(() => true)}>\n          <GoSearch />\n        </SearchIcon>\n      ) : (\n        <Sidebar>\n          <div style={{ display: 'flex' }}>\n            <SearchInput\n              ref={ref}\n              placeholder='Search country to view details'\n              value={searchTerm}\n              onChange={e => {\n                search(e.target.value);\n              }}\n            />\n            <IoMdClose onClick={() => setShowSideBar(() => false)} />\n          </div>\n          <CountriesListContainer>\n            {results.map((country, i) => {\n              const key = i;\n              return (\n                <Link key={key} to={`/${country}`}>\n                  <TextContainer>\n                    <Text>{country}</Text>\n                    <Icon>\n                      <FiArrowRight />\n                    </Icon>\n                  </TextContainer>\n                </Link>\n              );\n            })}\n          </CountriesListContainer>\n        </Sidebar>\n      )}\n    </>\n  );\n}\n\nSearch.propTypes = {\n  initialData: PropTypes.arrayOf(PropTypes.any)\n};\n\nSearch.defaultProps = {\n  initialData: []\n};\n\nexport default React.memo(Search);\n","import { useRef, useEffect } from 'react';\n\nexport default function useInputFocus(active) {\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (inputRef.current && active) {\n      inputRef.current.focus();\n    }\n  }, [active]);\n\n  return { ref: inputRef };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { GoChevronDown, GoChevronUp } from 'react-icons/go';\n\nconst Container = styled.div`\n  position: fixed;\n  bottom: 0;\n\n  display: flex;\n  flex-direction: column;\n\n  width: 256px;\n  height: 120px;\n  padding: 16px;\n  margin: 0 0 16px 16px;\n\n  background: #AAAAAA;\n  box-shadow: 0px 2px 4px #d7d9df;\n  border-radius: 16px;\n\n  transition: max-height 0.15s ease-out;\n\n  @media only screen and (max-width: 768px) {\n    position: fixed;\n    width: calc(100vw - 32px);\n    height: ${props => (props.height === 'true' ? '120px' : '10px')};\n    max-height: ${props => (props.height === 'true' ? '150px' : '15px')};\n    margin: 0;\n    border-radius: 8px;\n    transition: ${props =>\n      props.height === 'true' ? 'all 0.5s ease-in' : 'all 0.5s ease-out'};\n    overflow: hidden;\n  }\n`;\n\nconst Text = styled.div`\n  flex-shrink: 0;\n\n  margin-bottom: 8px;\n\n  font-size: ${props => props.size || '14px'};\n  color: ${props => props.color && props.color};\n\n  :last-child {\n    margin: 0;\n  }\n`;\n\nconst Icon = styled.div`\n  display: none;\n\n  @media only screen and (max-width: 768px) {\n    display: block;\n    margin-left: auto;\n    height: 24px;\n    width: 24px;\n    cursor: pointer;\n\n    svg {\n      height: 100%;\n      width: 100%;\n    }\n  }\n`;\n\nfunction formatDate(data) {\n  const dateParts = Date(data)\n    .toString()\n    .split(' ');\n\n  let newDate = '';\n\n  for (let i = 0; i < 5; i += 1) {\n    newDate = newDate.concat(`${dateParts[i]} `);\n  }\n\n  return newDate;\n}\n\nfunction GlobalStats({ stats }) {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <Container height={expanded ? 'true' : 'false'}>\n      <div style={{ display: 'flex', alignItems: 'normal', flexShrink: 0 }}>\n        <div style={{ margin: 0, marginBottom: '8px', fontSize: '16px' }}>\n          Global Stats\n        </div>\n        <Icon>\n          {expanded ? (\n            <GoChevronDown\n              onClick={() => setExpanded(prevState => !prevState)}\n            />\n          ) : (\n            <GoChevronUp onClick={() => setExpanded(prevState => !prevState)} />\n          )}\n        </Icon>\n      </div>\n      <Text color='#4f5d75'>Cases: {stats.cases}</Text>\n      <Text color='#008000'>Recovered: {stats.recovered}</Text>\n      <Text color='#f1173f'>Deaths: {stats.deaths}</Text>\n      <Text size='10px'>Last Updated On: {formatDate(stats.updated)}</Text>\n    </Container>\n  );\n}\n\nGlobalStats.propTypes = {\n  stats: PropTypes.shape({\n    cases: PropTypes.number,\n    deaths: PropTypes.number,\n    recovered: PropTypes.number,\n    updated: PropTypes.number\n  })\n};\n\nGlobalStats.defaultProps = {\n  stats: {}\n};\n\nexport default React.memo(GlobalStats);\n","import React, { createContext, useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nconst StoreContext = createContext();\n\nconst initialState = {\n  countries: JSON.parse(sessionStorage.getItem('allCountries')) || []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_COUNTRIES':\n      return { ...state, countries: action.payload };\n    case 'ERROR':\n      return { ...state };\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nStoreProvider.propTypes = {\n  children: PropTypes.objectOf(PropTypes.any)\n};\n\nStoreProvider.defaultProps = {\n  children: {}\n};\n\nexport const useStore = () => useContext(StoreContext);\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html, body {\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    font-family: 'Roboto', sans-serif;\n  }\n\n\n  svg {\n    display: inline-block;\n    vertical-align: middle;\n    background-color:rgb(35,35,35);\n  }\n\n  a:link, a:visited, a:hover, a:active {\n    text-decoration: none;\n  }\n\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n\n  .main-map {\n    height: 100vh;\n    width: 100vw;\n  }\n\n  .rsm-geographies{\n    path {\n      cursor: pointer\n    }\n  }\n`;\n\nexport const Credits = styled.div`\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  margin-right: 16px;\n\n  margin-bottom: 16px;\n\n  font-size: 15px;\n\n  @media only screen and (max-width: 768px) {\n    left: 0;\n    margin: 0;\n    bottom: 150px;\n    transform: rotate(270deg);\n    transform-origin: 0 0;\n\n    font-size: 10px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport { getAll, getAllCountries } from '../../api';\nimport WorldMap from '../../components/Map';\nimport Search from '../../components/Search';\nimport GlobalStats from '../../components/WorldStats';\nimport { useStore } from '../../Store';\nimport { Credits } from '../../GlobalStyles';\n\nfunction Main() {\n  const { state, dispatch } = useStore();\n  const [covid19Data, setCovid19Data] = useState({});\n  const [tooltipContent, setTooltipContent] = useState({});\n\n  useEffect(() => {\n    (async function getData() {\n      const data = await getAll();\n      setCovid19Data(() => data);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async function getAllCountriesData() {\n      const data = await getAllCountries();\n      dispatch({ type: 'FETCH_COUNTRIES', payload: data });\n    })();\n  }, [dispatch]);\n\n  return (\n    <>\n      <Search initialData={state.countries.map(country => country.country)} />\n      <GlobalStats stats={covid19Data} />\n      <WorldMap\n        setTooltipContent={setTooltipContent}\n        covid19DataScale={covid19Data.cases}\n        countriesData={state.countries}\n      />\n      {tooltipContent.length !== 0 && (\n        <ReactTooltip>\n          <h4>{tooltipContent.name && tooltipContent.name}</h4>\n          {tooltipContent.cases && <h5>Cases: {tooltipContent.cases}</h5>}\n          {tooltipContent.recovered && (\n            <h5>Recovered: {tooltipContent.recovered}</h5>\n          )}\n          {tooltipContent.deaths && <h5>Deaths: {tooltipContent.deaths}</h5>}\n        </ReactTooltip>\n      )}\n      <Credits>\n        <a href=\"https://reactportfolio-delta-rose.now.sh/\">IBRAHIM</a> Made with\n        <span style={{ color: 'red' }}> &#x2764; </span>\n        using\n        <a href='https://github.com/NovelCOVID/API'> NovelCOVID API.</a>\n      </Credits>\n    </>\n  );\n}\n\nexport default Main;\n","import styled from 'styled-components';\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  height: 45px;\n  width: calc(100vw - 16px);\n  padding: 8px;\n\n  background-color:rgb(35,35,35);\n  box-shadow: 0px 2px 4px #d7d9df;\n\n  font-size: 24px;\n  color: #ffffff;\n`;\n\nconst ScreenContainer = styled.div`\n  height: calc(100vh - 60px);\n  width: calc(100vw - 32px);\n  padding: 0 15px;\n\n  overflow: hidden;\n  overflow-y: scroll;\n  @media only screen and (max-width: 768px) {\n    height: calc(100vh - 73px);\n  }\n`;\n\nconst StatContainer = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-row: auto auto;\n  grid-column-gap: 32px;\n  grid-row-gap: 24px;\n\n  padding: 16px 0;\n\n  @media only screen and (max-width: 768px) {\n    display: grid;\n    grid-template-columns: 1fr;\n    padding: 16px 0;\n    grid-row-gap: 24px;\n  }\n`;\n\nconst StatItem = styled.div`\n  display: flex;\n\n  padding: 16px;\n\n  background: #ffffff;\n  box-shadow: 0px 2px 4px #d7d9df;\n  border-radius: 8px;\n\n  font-size: 12px;\n  color: ${props => props.color || '#4f5d75'};\n\n  transition: all 0.5s ease-in-out;\n\n  :hover,\n  :focus {\n    transform: scale(1.01);\n  }\n`;\n\nexport { Header, ScreenContainer, StatContainer, StatItem };\n","import React, { useState, useEffect } from 'react';\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport useWindowSize from '../../hooks/useWindowSize';\n\nconst sanitizeData = (object = {}) => {\n  const { cases, deaths, recovered } = object;\n\n  const casesDates = Object.keys(cases);\n  const deathsDates = Object.keys(cases);\n  const recoveredDates = Object.keys(cases);\n\n  return casesDates.reduce((acc, date) => {\n    const entry = { date, cases: cases[date] };\n    if (deathsDates.includes(date) === -1) entry.deaths = 0;\n    else entry.deaths = deaths[date];\n    if (recoveredDates.includes(date) === -1) entry.recovered = 0;\n    else entry.recovered = recovered[date];\n    return [...acc, entry];\n  }, []);\n};\n\nfunction Chart({ data }) {\n  const { width } = useWindowSize();\n  const [showDot, setShowDot] = useState(true);\n\n  useEffect(() => {\n    if (width < 769) setShowDot(() => false);\n    else setShowDot(() => true);\n  }, [width]);\n\n  return (\n    <ResponsiveContainer width='100%' height={512}>\n      <LineChart data={sanitizeData(data)} margin={{ top: 16, bottom: 16 }}>\n        <CartesianGrid stroke='#ccc' strokeDasharray='5 5' />\n        <XAxis\n          label={{\n            value: 'Dates',\n            fontSize: '16px',\n            position: 'insideBottom',\n            offset: 0\n          }}\n          tick={{ fontSize: '10px' }}\n          dataKey='date'\n          height={45}\n        />\n        <YAxis\n          label={{\n            value: 'Cases',\n            fontSize: '16px',\n            angle: -90,\n            position: 'insideLeft'\n          }}\n          tick={{ fontSize: '10px' }}\n        />\n        <Tooltip />\n        <Legend />\n        <Line\n          type='monotone'\n          dataKey='cases'\n          stroke='#4f5d75'\n          dot={showDot ? { strokeWidth: 0.2 } : false}\n        />\n        <Line\n          type='monotone'\n          dataKey='deaths'\n          stroke='#f1173f'\n          dot={showDot ? { strokeWidth: 0.2 } : false}\n        />\n        <Line\n          type='monotone'\n          dataKey='recovered'\n          stroke='#0087d4'\n          dot={showDot ? { strokeWidth: 0.2 } : false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport default React.memo(Chart);\n","import { useEffect, useState } from 'react';\n\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useStore } from '../../Store';\nimport { getHistoricalDataByCountry } from '../../api';\nimport { Header, ScreenContainer, StatContainer, StatItem } from './styled';\nimport Chart from '../../components/Chart';\n\nfunction Details() {\n  const {\n    state: { countries }\n  } = useStore();\n  const { country } = useParams();\n  const [historicalData, setHistoricalData] = useState({});\n\n  const searchCountry = countries.find(entry => entry.country === country);\n\n  useEffect(() => {\n    (async function getHistoricalData() {\n      const data = await getHistoricalDataByCountry(country.toLowerCase());\n      setHistoricalData(() => data);\n    })();\n  }, [country]);\n\n  return (\n    <>\n      <Header>Detailed stats for {searchCountry.country}</Header>\n      <ScreenContainer>\n        <StatContainer>\n          <StatItem>Total Cases: {searchCountry.cases}</StatItem>\n          <StatItem>Today Cases: {searchCountry.todayCases}</StatItem>\n          <StatItem color='#f1173f'>\n            Total Deaths: {searchCountry.deaths}\n          </StatItem>\n          <StatItem color='#f1173f'>\n            Today Deaths: {searchCountry.todayDeaths}\n          </StatItem>\n          <StatItem color='#0087d4'>\n            Recovered: {searchCountry.recovered}\n          </StatItem>\n          <StatItem>Active: {searchCountry.active}</StatItem>\n          <StatItem color='#f1173f'>\n            Critical: {searchCountry.critical}\n          </StatItem>\n        </StatContainer>\n        {historicalData.timeline &&\n          Object.keys(historicalData.timeline.cases).length > 0 && (\n            <>\n              <div\n                style={{\n                  fontSize: '24px',\n                  color: '#4f5d75',\n                  marginLeft: '4px'\n                }}>\n                Historical Data\n              </div>\n              <Chart data={historicalData.timeline} />\n            </>\n          )}\n      </ScreenContainer>\n    </>\n  );\n}\n\nexport default Details;\n","import React from 'react';\nimport { BrowserRouter as Router, Route , Redirect } from 'react-router-dom';\nimport Main from './views/Main';\nimport Details from './views/Details';\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Router>\n        <Route exact path='/' component={Main} />\n        <Route path='/:country' component={Details} />\n        <Redirect from=\"/*\" to=\"/\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport GlobalStyles from './GlobalStyles';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyles />\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}